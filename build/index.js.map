{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../app/entry.server.tsx", "/sandbox/app/root.tsx", "/sandbox/app/routes/index.tsx", "server-assets-manifest:@remix-run/dev/assets-manifest", "server-entry-module:@remix-run/dev/server-build"],
  "sourcesContent": ["export * from \"@remix-run/dev/server-build\";", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport * as React from \"react\";\nexport { React };\n", "import type { EntryContext } from '@remix-run/node'\nimport { RemixServer } from '@remix-run/react'\nimport { renderToString } from 'react-dom/server'\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />,\n  )\n\n  responseHeaders.set('Content-Type', 'text/html')\n\n  return new Response('<!DOCTYPE html>' + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  })\n}\n", "import type { LinksFunction, MetaFunction } from '@remix-run/node'\nimport {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useTransition,\n} from '@remix-run/react'\nimport NProgress from 'nprogress'\nimport nProgressStyles from 'nprogress/nprogress.css'\nimport { useEffect } from 'react'\n\nexport let links: LinksFunction = () => {\n  // if you already have one only add this stylesheet to your list of links\n  return [{ rel: 'stylesheet', href: nProgressStyles }]\n}\nexport const meta: MetaFunction = () => ({\n  charset: 'utf-8',\n  title: 'Remix Search Params by Form',\n  viewport: 'width=device-width,initial-scale=1',\n})\n\nexport default function App() {\n  let transition = useTransition()\n  useEffect(() => {\n    if (transition.state !== 'idle') {\n      NProgress.start()\n    } else if (transition.state === 'idle') {\n      NProgress.done()\n    }\n  }, [transition.state])\n  return (\n    <html lang=\"en\">\n      <head>\n        <Meta />\n        <Links />\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n      </head>\n      <body>\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n        <LiveReload />\n      </body>\n    </html>\n  )\n}\n", "import type { LoaderFunction } from '@remix-run/node'\nimport { json } from '@remix-run/node'\nimport { Form, useLoaderData, useSubmit } from '@remix-run/react'\nimport users from '~/users.json'\n\ntype User = {\n  id: number\n  firstName: string\n  lastName: string\n}\n\ntype LoaderType = {\n  users: User[]\n  sortBy: keyof User\n}\n\nexport const loader: LoaderFunction = async ({ request }) => {\n  const url = new URL(request.url)\n  const sortBy = (url.searchParams.get('sortBy') ?? 'firstName') as keyof User\n\n  const sortedUsers = users.sort((a: User, b: User) =>\n    a[sortBy] < b[sortBy] ? -1 : 1,\n  )\n\n  return json({ users: sortedUsers, sortBy })\n}\n\nexport default function Index() {\n  const { users, sortBy } = useLoaderData<LoaderType>()\n  const submit = useSubmit()\n  const handleChange = (e: any) => submit(e.target.form)\n\n  return (\n    <div className=\"m-4\">\n      <h1 className=\"text-2xl font-bold mb-4\">\n        Welcome to Remix Search Params by Form\n      </h1>\n      <Form method=\"get\" onChange={handleChange}>\n        <span>Sort by: </span>\n        <select\n          name=\"sortBy\"\n          defaultValue={sortBy}\n          className=\"border p-2 rounded\"\n        >\n          <option value=\"firstName\">First Name</option>\n          <option value=\"lastName\">Last Name</option>\n        </select>\n        <noscript>\n          <button className=\"ml-4 bg-blue-300 px-4 py-2 rounded\">Submit</button>\n        </noscript>\n      </Form>\n      <table className=\"mt-4\">\n        <thead className=\"bg-gray-200\">\n          <tr>\n            <th className=\"p-2\">First Name</th>\n            <th className=\"p-2\">Last Name</th>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map((user) => (\n            <tr key={user.id} className=\"even:bg-green-100\">\n              <td className=\"p-2\">{user.firstName}</td>\n              <td className=\"p-2\">{user.lastName}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  )\n}\n", "export default {'version':'4165f087','entry':{'module':'/build/entry.client-2SXKGKKG.js','imports':['/build/_shared/chunk-E43AHNRD.js']},'routes':{'root':{'id':'root','parentId':undefined,'path':'','index':undefined,'caseSensitive':undefined,'module':'/build/root-426CAVNO.js','imports':undefined,'hasAction':false,'hasLoader':false,'hasCatchBoundary':false,'hasErrorBoundary':false},'routes/index':{'id':'routes/index','parentId':'root','path':undefined,'index':true,'caseSensitive':undefined,'module':'/build/routes/index-THB54QZB.js','imports':undefined,'hasAction':false,'hasLoader':true,'hasCatchBoundary':false,'hasErrorBoundary':false}},'url':'/build/manifest-4165F087.js'};", "\nimport * as entryServer from \"/sandbox/app/entry.server.tsx\";\nimport * as route0 from \"/sandbox/app/root.tsx\";\nimport * as route1 from \"/sandbox/app/routes/index.tsx\";\n  export { default as assets } from \"@remix-run/dev/assets-manifest\";\n  export const entry = { module: entryServer };\n  export const routes = {\n    \"root\": {\n      id: \"root\",\n      parentId: undefined,\n      path: \"\",\n      index: undefined,\n      caseSensitive: undefined,\n      module: route0\n    },\n  \"routes/index\": {\n      id: \"routes/index\",\n      parentId: \"root\",\n      path: undefined,\n      index: true,\n      caseSensitive: undefined,\n      module: route1\n    }\n  };"],
  "mappings": "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",
  "names": []
}
